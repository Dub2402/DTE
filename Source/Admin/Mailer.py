from .ReplyKeyboards import ReplyKeyboards

from dublib.TelebotUtils import UserData, UsersManager
from dublib.Polyglot import Markdown
from telebot import TeleBot, types
from threading import Thread
from time import sleep

import random

class Mailer:
	"""–†–∞—Å—Å—ã–ª—å—â–∏–∫."""

	#==========================================================================================#
	# >>>>> –ü–†–ò–í–ê–¢–ù–´–ï –ú–ï–¢–û–î–´ <<<<< #
	#==========================================================================================#

	def __BuildButton(self, text: str, link: str) -> types.InlineKeyboardButton:
		"""
		–°–æ–∑–¥–∞—ë—Ç –∫–Ω–æ–ø–∫—É-—Å—Å—ã–ª–∫—É.
			text ‚Äì –ø–æ–¥–ø–∏—Å—å –∫–Ω–æ–ø–∫–∏;
			link ‚Äì —Å—Å—ã–ª–∫–∞.
		"""

		# –†–∞–∑–º–µ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏.
		Markup = types.InlineKeyboardMarkup()
		# –ï—Å–ª–∏ –¥–∞–Ω–Ω—ã–µ –¥–æ—Å—Ç—É–ø–Ω—ã, —Å–æ–∑–¥–∞—Ç—å –∫–Ω–æ–ø–∫—É.
		if text and link: Markup.add(types.InlineKeyboardButton(text, link))

		return Markup

	def __BuildMediaGroup(self, caption: str, files: dict) -> list[types.InputMedia]:
		"""
		–°—Ç—Ä–æ–∏—Ç –º–µ–¥–∏–∞ –≥—Ä—É–ø–ø—É –∏–∑ –æ–ø–∏—Å–∞–Ω–∏—è.
			caption ‚Äì –ø–æ–¥–ø–∏—Å—å –¥–ª—è –ø–µ—Ä–≤–æ–≥–æ —Ñ–∞–π–ª–∞;
			types ‚Äì —Å–ª–æ–≤–∞—Ä—å –¥–∞–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤.
		"""

		# –ú–µ–¥–∏–∞ –≥—Ä—É–ø–ø–∞.
		MediaGroup = list()

		# –î–ª—è –∫–∞–∂–¥–æ–≥–æ —Ñ–∞–π–ª–∞.
		for File in files:
			# –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –Ω–∞–ª–∏—á–∏—è –ø–æ–¥–ø–∏—Å–∏.
			Caption = None if MediaGroup else caption
			# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–∏–ø–æ–≤
			if File["type"] == "photo": MediaGroup.append(types.InputMediaPhoto(media = File["file_id"], caption = Caption))
			if File["type"] == "video": MediaGroup.append(types.InputMediaVideo(media = File["file_id"], caption = Caption))
			if File["type"] == "audio": MediaGroup.append(types.InputMediaAudio(media = File["file_id"], caption = Caption))
			if File["type"] == "document": MediaGroup.append(types.InputMediaDocument(media = File["file_id"], caption = Caption))

		return MediaGroup

	def __Mailing(self, admin: UserData, targets: list[UserData]):
		"""
		–ú–µ—Ç–æ–¥ –≤–µ–¥–µ–Ω–∏—è —Ä–∞—Å—Å—ã–ª–∫–∏.
			admin ‚Äì –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä;\n
			targets ‚Äì —Å–ø–∏—Å–æ–∫ —Ü–µ–ª–µ–π.
		"""

		# –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Ä–∞—Å—Å—ã–ª–∫–∏.
		Progress = 0.0
		Sended = 0
		Errors = 0
		# –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è: —Ä–∞—Å—Å—ã–ª–∫–∞ –Ω–∞—á–∞—Ç–∞.
		self.__Bot.send_message(
			chat_id = admin.id,
			text = "–†–∞—Å—Å—ã–ª–∫–∞ –Ω–∞—á–∞—Ç–∞.",
			reply_markup = ReplyKeyboards().mailing(admin)
		)
		# –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è: –∏–¥–Ω–∏–∫–∞—Ü–∏—è –ø—Ä–æ–≥—Ä–µ—Å—Å–∞.
		MessageID = self.__Bot.send_message(
			chat_id = admin.id,
			text = f"*üì® –†–∞—Å—Å—ã–ª–∫–∞*\n\n‚è≥ –ü—Ä–æ–≥—Ä–µ—Å—Å: {Markdown(Progress).escaped_text}%\n‚úâÔ∏è –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ: {Sended}\n‚ùå –û—à–∏–±–æ–∫: {Errors}",
			parse_mode = "MarkdownV2"
		).id

		# –î–ª—è –∫–∞–∂–¥–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
		for Index in range(len(targets)):
			
			# –ï—Å–ª–∏ –ø–æ–¥–∞–Ω —Å–∏–≥–Ω–∞–ª –æ—Å—Ç–∞–Ω–æ–≤–∫–∏.
			if admin.get_property("mailing") == None:
				# –°–±—Ä–æ—Å —Å–≤–æ–π—Å—Ç–≤–∞.
				admin.set_property("mailing", False)
				# –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ü–∏–∫–ª–∞.
				break

			try:
				# –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è.
				self.send_message(admin, targets[Index].id)

			except: Errors += 1

			else: Sended += 1

			# –†–∞—Å—á—ë—Ç –ø—Ä–æ–≥—Ä–µ—Å—Å–∞.
			Progress = (Sended + Errors) / len(targets) * 100
			# –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è: –∏–Ω–¥–∏–∫–∞—Ü–∏—è –ø—Ä–æ–≥—Ä–µ—Å—Å–∞.
			self.__Bot.edit_message_text(
				chat_id = admin.id,
				message_id = MessageID,
				text = f"*üì® –†–∞—Å—Å—ã–ª–∫–∞*\n\n‚è≥ –ü—Ä–æ–≥—Ä–µ—Å—Å: {Markdown(Progress).escaped_text}% \\({Index + 1} –∏–∑ {len(targets)}\\)\n‚úâÔ∏è –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ: {Sended}\n‚ùå –û—à–∏–±–æ–∫: {Errors}",
				parse_mode = "MarkdownV2"
			)
			# –í—ã–∂–∏–¥–∞–Ω–∏–µ –∏–Ω—Ç–µ—Ä–≤–∞–ª–∞.
			sleep(0.1)

		# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–≤–æ–π—Å—Ç–≤–∞: —Ä–∞—Å—Å—ã–ª–∫–∞ –Ω–µ –≤–µ–¥—ë—Ç—Å—è.
		admin.set_property("mailing", False)
		# –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è: —Ä–∞—Å—Å—ã–ª–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞.
		self.__Bot.send_message(
			chat_id = admin.id,
			text = "–†–∞—Å—Å—ã–ª–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞.",
			reply_markup = ReplyKeyboards().mailing(admin)
		)

	#==========================================================================================#
	# >>>>> –ü–£–ë–õ–ò–ß–ù–´–ï –ú–ï–¢–û–î–´ <<<<< #
	#==========================================================================================#

	def __init__(self, bot: TeleBot):
		"""
		–•—Ä–∞–Ω–∏–ª–∏—â–µ –¥–∞–Ω–Ω—ã—Ö –º–µ–¥–∏–∞-—Ñ–∞–π–ª–æ–≤.
			bot ‚Äì –±–æ—Ç Telegram.
		"""

		#---> –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏—Ö —Å–≤–æ–π—Å—Ç–≤.
		#==========================================================================================#
		# –ë–æ—Ç.
		self.__Bot = bot
		# –ü–æ—Ç–æ–∫ —Ä–∞—Å—Å—ã–ª–∫–∏.
		self.__MailingThread = None

	def send_message(self, admin: UserData, user_id: int):
		"""
		–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é.
			admin ‚Äì –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä;\n
			user_id ‚Äì –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
		"""

		# –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏.
		Text = admin.get_property("mailing_caption")
		Files = admin.get_property("mailing_content")
		ButtonLabel = admin.get_property("button_label")
		ButtonLink = admin.get_property("button_link")
		# –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –º–µ—Ç–æ–¥–æ–≤ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤–ª–æ–∂–µ–Ω–∏—è.
		SendMethods = {
			"photo": self.__Bot.send_photo,
			"video": self.__Bot.send_video,
			"audio": self.__Bot.send_audio,
			"document": self.__Bot.send_document
		}

		# –ï—Å–ª–∏ –∏–º–µ–µ—Ç—Å—è –Ω–µ—Å–∫–æ–ª—å–∫–æ –≤–ª–æ–∂–µ–Ω–∏–π.
		if len(Files) > 1:
			# –û—Ç–ø—Ä–∞–≤–∫–∞ –º–µ–¥–∏–∞ –≥—Ä—É–ø–ø—ã.
			self.__Bot.send_media_group(
				chat_id = user_id,
				media = self.__BuildMediaGroup(Text, Files)
			)

		# –ï—Å–ª–∏ –∏–º–µ–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –æ–¥–Ω–æ –≤–ª–æ–∂–µ–Ω–∏–µ.
		elif len(Files) == 1:
			# –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –æ —Ñ–∞–π–ª–µ.
			FileType = Files[0]["type"]
			FileID = Files[0]["file_id"]
			# –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è.
			SendMethods[FileType](
				user_id,
				FileID,
				caption = Text,
				parse_mode = "HTML",
				reply_markup = self.__BuildButton(ButtonLabel, ButtonLink)
			)
			
		else:
			# –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è.
			self.__Bot.send_message(
				chat_id = user_id,
				text = Text,
				parse_mode = "HTML",
				disable_web_page_preview = True,
				reply_markup = self.__BuildButton(ButtonLabel, ButtonLink)
			)

	def start_mailing(self, admin: UserData, users_manager: UsersManager):
		"""
		–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é.
			admin ‚Äì –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä;\n
			users_manager ‚Äì –æ–±—ä–µ–∫—Ç —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏.
		"""

		# –í—ã–±–æ—Ä–∫–∞.
		Sampling = admin.get_property("sampling")
		# –¶–µ–ª–∏.
		Targets = None

		# –ï—Å–ª–∏ –≤ –≤—ã–±–æ—Ä–∫–µ —É–∫–∞–∑–∞–Ω–æ —á–∏—Å–ª–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.
		if type(Sampling) == int:

			try:
				# –í—ã–±–æ—Ä —Å–ª—É—á–∞–π–Ω–æ–≥–æ —á–∏—Å–ª–∞ —Ü–µ–ª–µ–π.
				Targets = random.sample(users_manager.users, Sampling)
			
			except ValueError:
				# –í—ã–±—Ä–∞—Ç—å –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.
				Targets = users_manager.users

		# –ï—Å–ª–∏ –≤—ã–±–æ—Ä–∫–∞ –Ω–µ –∑–∞–¥–∞–Ω–∞.
		elif Sampling == None:
			# –í—ã–±—Ä–∞—Ç—å –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.
			Targets = users_manager.users

		# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–≤–æ–π—Å—Ç–≤–∞: —Ä–∞—Å—Å—ã–ª–∫–∞ –≤–µ–¥—ë—Ç—Å—è.
		admin.set_property("mailing", True)
		# –°–æ–∑–¥–∞–Ω–∏–µ –∏ –∑–∞–ø—É—Å–∫ –ø–æ—Ç–æ–∫–∏
		self.__MailingThread = Thread(target = self.__Mailing, args = [admin, Targets])
		self.__MailingThread.start()