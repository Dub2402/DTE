from .InlineKeyboards import InlineKeyboards
from .ReplyKeyboards import ReplyKeyboards
from .Input import UserInput
from .Mailer import Mailer
from ..ReplyKeyboard import ReplyKeyboard

from dublib.TelebotUtils import UserData, UsersManager
from telebot import TeleBot, types

def InitializeCommands(bot: TeleBot, password: str, users: UsersManager):
	"""
	–ù–∞–±–æ—Ä –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä–æ–≤: –∫–æ–º–∞–Ω–¥—ã.
		bot ‚Äì —ç–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞;\n
		password ‚Äì –ø–∞—Ä–æ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞;\n
		users ‚Äì –º–µ–Ω–µ–¥–∂–µ—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.
	"""

	# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã: admin.
	@bot.message_handler(commands = ["admin"])
	def CommandAdmin(Message: types.Message):
		# –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
		User = users.auth(Message.from_user)
		# –°–æ–∑–¥–∞–Ω–∏–µ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö —Å–≤–æ–π—Å—Ç–≤.
		User.set_property("mailing_caption", None, force = False)
		User.set_property("mailing_content", [], force = False)
		User.set_property("button_label", None, force = False)
		User.set_property("button_link", None, force = False)
		User.set_property("sampling", None, force = False)
		User.set_property("mailing", False, force = False)
		# –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ª–æ–≤ –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏.
		MessageWords = Message.text.split(" ")

		# –ï—Å–ª–∏ —É–∫–∞–∑—ã–≤–∞–ª—Å—è –ø–∞—Ä–æ–ª—å.
		if not User.has_permissions("admin") and len(MessageWords) == 2:
			# –í—ã–¥–∞—á–∞ –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.
			User.add_permissions("admin")

			# –ï—Å–ª–∏ –ø–∞—Ä–æ–ª—å –≤–µ—Ä–Ω—ã–π.
			if MessageWords[1] == password:
				bot.send_message(
					chat_id = Message.chat.id,
					text = "–ü–∞—Ä–æ–ª—å –ø—Ä–∏–Ω—è—Ç. –î–æ—Å—Ç—É–ø —Ä–∞–∑—Ä–µ—à—ë–Ω.",
					reply_markup = ReplyKeyboards().admin()
				)

			else:
				# –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è: –¥–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â—ë–Ω.
				bot.send_message(
					chat_id = Message.chat.id,
					text = "–ù–µ–≤–µ—Ä–Ω—ã–π –ø–∞—Ä–æ–ª—å."
				)

		else:

			# –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∏–º–µ–µ—Ç –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.
			if User.has_permissions("admin"):
				# –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è: –¥–æ—Å—Ç—É–ø —Ä–∞–∑—Ä–µ—à—ë–Ω.
				bot.send_message(
					chat_id = Message.chat.id,
					text = "–î–æ—Å—Ç—É–ø —Ä–∞–∑—Ä–µ—à—ë–Ω.",
					reply_markup = ReplyKeyboards().admin()
				)

			else:
				# –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è: –¥–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â—ë–Ω.
				bot.send_message(
					chat_id = Message.chat.id,
					text = "–î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â—ë–Ω."
				)

def InitializeReplyKeyboard(bot: TeleBot, users: UsersManager):
	"""
	–ù–∞–±–æ—Ä –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä–æ–≤: Reply-–∫–Ω–æ–ø–∫–∏.
		bot ‚Äì —ç–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞;\n
		users ‚Äì –º–µ–Ω–µ–¥–∂–µ—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.
	"""

	# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏: üéØ –í—ã–±–æ—Ä–∫–∞.
	@bot.message_handler(content_types = ["text"], regexp = "üéØ –í—ã–±–æ—Ä–∫–∞")
	def Button(Message: types.Message):
		# –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
		User = users.auth(Message.from_user)
		# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –æ–∂–∏–¥–∞–µ–º–æ–≥–æ —Ç–∏–ø–∞.
		User.set_expected_type(UserInput.Sampling.value)
		# –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è: –≤–≤–µ–¥–∏—Ç–µ –≤—ã–±–æ—Ä–∫—É.
		bot.send_message(
			chat_id = Message.chat.id,
			text = f"*–£–∫–∞–∂–∏—Ç–µ –≤—ã–±–æ—Ä–∫—É*\n\n–¢–µ–∫—É—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {len(users.users)}",
			parse_mode = "MarkdownV2",
			reply_markup = InlineKeyboards().sampling(User)
		)

	# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏: üïπÔ∏è –î–æ–±–∞–≤–∏—Ç—å –∫–Ω–æ–ø–∫—É.
	@bot.message_handler(content_types = ["text"], regexp = "üïπÔ∏è –î–æ–±–∞–≤–∏—Ç—å –∫–Ω–æ–ø–∫—É")
	def Button(Message: types.Message):
		# –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
		User = users.auth(Message.from_user)
		# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –æ–∂–∏–¥–∞–µ–º–æ–≥–æ —Ç–∏–ø–∞.
		User.set_expected_type(UserInput.ButtonLabel.value)
		# –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è: –≤–≤–µ–¥–∏—Ç–µ –ø–æ–¥–ø–∏—Å—å.
		bot.send_message(
			chat_id = Message.chat.id,
			text = "–í–≤–µ–¥–∏—Ç–µ –ø–æ–¥–ø–∏—Å—å –¥–ª—è –∫–Ω–æ–ø–∫–∏.",
			reply_markup = ReplyKeyboards().cancel()
		)

	# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏: ‚úÖ –ó–∞–≤–µ—Ä—à–∏—Ç—å.
	@bot.message_handler(content_types = ["text"], regexp = "‚úÖ –ó–∞–≤–µ—Ä—à–∏—Ç—å")
	def Button(Message: types.Message):
		# –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
		User = users.auth(Message.from_user)
		# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –æ–∂–∏–¥–∞–µ–º–æ–≥–æ —Ç–∏–ø–∞.
		User.set_expected_type(None)
		# –ß–∏—Å—Ç–∫–∞ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Å–≤–æ–π—Å—Ç–≤.
		User.clear_temp_properties()
		# –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è: –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ.
		bot.send_message(
			chat_id = Message.chat.id,
			text = "–°–æ–æ–±—â–µ–Ω–∏–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ.",
			reply_markup = ReplyKeyboards().mailing(User)
		)

	# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏: ‚ùå –ó–∞–∫—Ä—ã—Ç—å.
	@bot.message_handler(content_types = ["text"], regexp = "‚ùå –ó–∞–∫—Ä—ã—Ç—å")
	def Button(Message: types.Message):
		# –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
		User = users.auth(Message.from_user)
		# –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è: –ø–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∑–∞–∫—Ä—ã—Ç–∞.
		bot.send_message(
			chat_id = Message.chat.id,
			text = "–ü–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∑–∞–∫—Ä—ã—Ç–∞.",
			reply_markup = ReplyKeyboard().AddMenu(User)
		)

	# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏: üü¢ –ó–∞–ø—É—Å—Ç–∏—Ç—å.
	@bot.message_handler(content_types = ["text"], regexp = "üü¢ –ó–∞–ø—É—Å—Ç–∏—Ç—å")
	def Button(Message: types.Message):
		# –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
		User = users.auth(Message.from_user)
		# –ü—Ä–∏–≤—è–∑–∫–∞ —Ä–∞—Å—Å—ã–ª—å—â–∏–∫–∞ –∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é.
		User.set_object("mailer", Mailer(bot))
		
		# –ï—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –∑–∞–¥–∞–Ω–æ.
		if not User.get_property("mailing_caption") and not User.get_property("mailing_content"):
			# –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è: —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –∑–∞–¥–∞–Ω–æ.
			bot.send_message(
				chat_id = Message.chat.id,
				text = "–í—ã –Ω–µ –∑–∞–¥–∞–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏."
			)

		else:
			# –ü—Ä–æ—Å–º–æ—Ç—Ä —Å–æ–æ–±—â–µ–Ω–∏—è.
			User.get_object("mailer").start_mailing(User, users)

	# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏: ‚Ü©Ô∏è –ù–∞–∑–∞–¥.
	@bot.message_handler(content_types = ["text"], regexp = "‚Ü©Ô∏è –ù–∞–∑–∞–¥")
	def Button(Message: types.Message):
		# –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
		User = users.auth(Message.from_user)
		# –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è: —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞.
		bot.send_message(
			chat_id = Message.chat.id,
			text = "–ü–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è.",
			reply_markup = ReplyKeyboards().admin()
		)

	# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏: ‚ùå –û—Ç–º–µ–Ω–∞.
	@bot.message_handler(content_types = ["text"], regexp = "‚ùå –û—Ç–º–µ–Ω–∞")
	def Button(Message: types.Message):
		# –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
		User = users.auth(Message.from_user)
		# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –æ–∂–∏–¥–∞–µ–º–æ–≥–æ —Ç–∏–ø–∞.
		User.set_expected_type(None)

		try:
			# –í–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Å–≤–æ–π—Å—Ç–≤.
			Caption = User.get_property("temp_mailing_caption")
			Content = User.get_property("temp_mailing_content")
			User.clear_temp_properties()
			User.set_property("mailing_caption", Caption)
			User.set_property("mailing_content", Content)
			
		except: pass

		# –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è: –¥–µ–π—Å—Ç–≤–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ.
		bot.send_message(
			chat_id = Message.chat.id,
			text = "–î–µ–π—Å—Ç–≤–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ.",
			reply_markup = ReplyKeyboards().mailing(User)
		)

	# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏: üî¥ –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å.
	@bot.message_handler(content_types = ["text"], regexp = "üî¥ –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å")
	def Button(Message: types.Message):
		# –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
		User = users.auth(Message.from_user)
		# –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–∏–≥–Ω–∞–ª–∞ –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ —Ä–∞—Å—Å—ã–ª–∫–∏.
		User.set_property("mailing", None)

	# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏: üîé –ü—Ä–æ—Å–º–æ—Ç—Ä.
	@bot.message_handler(content_types = ["text"], regexp = "üîé –ü—Ä–æ—Å–º–æ—Ç—Ä")
	def Button(Message: types.Message):
		# –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
		User = users.auth(Message.from_user)
		
		# –ï—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –∑–∞–¥–∞–Ω–æ.
		if not User.get_property("mailing_caption") and not User.get_property("mailing_content"):
			# –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è: —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –∑–∞–¥–∞–Ω–æ.
			bot.send_message(
				chat_id = Message.chat.id,
				text = "–í—ã –Ω–µ –∑–∞–¥–∞–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏."
			)

		else:
			# –ü—Ä–æ—Å–º–æ—Ç—Ä —Å–æ–æ–±—â–µ–Ω–∏—è.
			Mailer(bot).send_message(User, User.id)

	# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏: üë§ –†–∞—Å—Å—ã–ª–∫–∞.
	@bot.message_handler(content_types = ["text"], regexp = "üë§ –†–∞—Å—Å—ã–ª–∫–∞")
	def Button(Message: types.Message):
		# –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
		User = users.auth(Message.from_user)
		# –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è: —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞.
		bot.send_message(
			chat_id = Message.chat.id,
			text = "–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ä–∞—Å—Å—ã–ª–∫–æ–π.",
			reply_markup = ReplyKeyboards().mailing(User)
		)

	# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏: ‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å.
	@bot.message_handler(content_types = ["text"], regexp = "‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å")
	def Button(Message: types.Message):
		# –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
		User = users.auth(Message.from_user)
		# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –æ–∂–∏–¥–∞–µ–º–æ–≥–æ —Ç–∏–ø–∞.
		User.set_expected_type(UserInput.Message.value)
		# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Å–≤–æ–π—Å—Ç–≤.
		Caption = User.get_property("mailing_caption")
		Content = User.get_property("mailing_content")
		User.set_temp_property("temp_mailing_caption", Caption)
		User.set_temp_property("temp_mailing_content", Content)
		# –ß–∏—Å—Ç–∫–∞ —Ç–µ–∫—É—â–∏—Ö —Å–≤–æ–π—Å—Ç–≤.
		User.set_property("mailing_caption", None)
		User.set_property("mailing_content", [])
		# –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è: –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ.
		bot.send_message(
			chat_id = Message.chat.id,
			text = "–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ –±—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –≤ —Ä–∞—Å—Å—ã–ª–∫–µ.\n\n–ï—Å–ª–∏ –≤—ã –ø—Ä–∏–∫—Ä–µ–ø–ª—è–µ—Ç–µ –Ω–µ—Å–∫–æ–ª—å–∫–æ –≤–ª–æ–∂–µ–Ω–∏–π, –¥–ª—è –∏—Ö —É–ø–æ—Ä—è–¥–æ—á–∏–≤–∞–Ω–∏—è —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –≤—ã–ø–æ–ª–Ω—è—Ç—å –∑–∞–≥—Ä—É–∑–∫—É —Ñ–∞–π–ª–æ–≤ –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ.",
			reply_markup = ReplyKeyboards().editing()
		)

	# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏: üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞.
	@bot.message_handler(content_types = ["text"], regexp = "üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞")
	def Button(Message: types.Message):
		# –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
		User = users.auth(Message.from_user)
		# –°–±–æ—Ä —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏.
		PremiumUsersCount = len(users.premium_users)
		UsersCount = len(users.users)
		# –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è: —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞.
		bot.send_message(
			chat_id = Message.chat.id,
			text = f"*üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞*\n\nüë§ –í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {UsersCount}\n‚≠ê –° Premium\\-–ø–æ–¥–ø–∏—Å–∫–æ–π: {PremiumUsersCount}",
			parse_mode = "MarkdownV2"
		)

	# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏: üïπÔ∏è –£–¥–∞–ª–∏—Ç—å –∫–Ω–æ–ø–∫—É.
	@bot.message_handler(content_types = ["text"], regexp = "üïπÔ∏è –£–¥–∞–ª–∏—Ç—å –∫–Ω–æ–ø–∫—É")
	def Button(Message: types.Message):
		# –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
		User = users.auth(Message.from_user)
		# –£–¥–∞–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –∫–Ω–æ–ø–∫–∏.
		User.set_property("button_label", None)
		User.set_property("button_link", None)
		# –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è: –∫–Ω–æ–ø–∫–∞ —É–¥–∞–ª–µ–Ω–∞.
		bot.send_message(
			chat_id = Message.chat.id,
			text = "–ö–Ω–æ–ø–∫–∞ —É–¥–∞–ª–µ–Ω–∞.",
			reply_markup = ReplyKeyboards().mailing(User)
		)

def InitializeText(bot: TeleBot, message: types.Message, user: UserData) -> bool:
	"""
	–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞: —Ç–µ–∫—Å—Ç.
		bot ‚Äì —ç–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞;\n
		message ‚Äì —Å–æ–æ–±—â–µ–Ω–∏–µ;\n
		user ‚Äì –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å.
	"""

	# –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∏–º–µ–µ—Ç –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –∏ –∑–∞–¥–∞–Ω–æ –æ–∂–∏–¥–∞–µ–º–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ.
	if user.has_permissions("admin") and user.expected_type:

		# –ï—Å–ª–∏ –æ–∂–∏–¥–∞–µ—Ç—Å—è —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏.
		if user.expected_type == UserInput.Message.value:
			# –ó–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –ø–æ–¥–ø–∏—Å–∏ –∫–Ω–æ–ø–∫–∏.
			user.set_property("mailing_caption", message.html_text)

			return True

		# –ï—Å–ª–∏ –æ–∂–∏–¥–∞–µ—Ç—Å—è –ø–æ–¥–ø–∏—Å—å –∫–Ω–æ–ø–∫–∏.
		if user.expected_type == UserInput.ButtonLabel.value:
			# –ó–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –ø–æ–¥–ø–∏—Å–∏ –∫–Ω–æ–ø–∫–∏.
			user.set_property("button_label", message.text)
			# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –æ–∂–∏–¥–∞–µ–º–æ–≥–æ —Ç–∏–ø–∞.
			user.set_expected_type(UserInput.ButtonLink.value)
			# –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è: –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É.
			bot.send_message(
				chat_id = message.chat.id,
				text = "–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É, –∫–æ—Ç–æ—Ä–∞—è –±—É–¥–µ—Ç –ø–æ–º–µ—â–µ–Ω–∞ –≤ –∫–Ω–æ–ø–∫—É.",
				reply_markup = ReplyKeyboards().cancel()
			)

			return True
		
		# –ï—Å–ª–∏ –æ–∂–∏–¥–∞–µ—Ç—Å—è —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏.
		if user.expected_type == UserInput.ButtonLink.value:
			# –ó–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –ø–æ–¥–ø–∏—Å–∏ –∫–Ω–æ–ø–∫–∏.
			user.set_property("button_link", message.text)
			# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –æ–∂–∏–¥–∞–µ–º–æ–≥–æ —Ç–∏–ø–∞.
			user.set_expected_type(None)
			# –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è: –∫–Ω–æ–ø–∫–∞ –ø—Ä–∏–∫—Ä–µ–ø–ª–µ–Ω–∞.
			bot.send_message(
				chat_id = message.chat.id,
				text = "–ö–Ω–æ–ø–∫–∞ –ø—Ä–∏–∫—Ä–µ–ø–ª–µ–Ω–∞ –∫ —Å–æ–æ–±—â–µ–Ω–∏—é.",
				reply_markup = ReplyKeyboards().mailing(user)
			)

			return True

def InitializeInlineKeyboard(bot: TeleBot = None, users: UsersManager = None):
	"""
	–ù–∞–±–æ—Ä –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä–æ–≤: Inline-–∫–Ω–æ–ø–∫–∏.
		bot ‚Äì —ç–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞;\n
		users ‚Äì –º–µ–Ω–µ–¥–∂–µ—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.
	"""

	# –û–±—Ä–∞–±–æ—Ç–∫–∞ Inline-–∫–Ω–æ–ø–∫–∏: –≤—ã–±–æ—Ä–∫–∞.
	@bot.callback_query_handler(func = lambda Callback: Callback.data.startswith("sampling"))
	def InlineButton(Call: types.CallbackQuery):
		# –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
		User = users.auth(Call.from_user)
		# –ò–∑–º–µ–Ω–µ–Ω–∏–µ —Å–≤–æ–π—Å—Ç–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
		if Call.data.endswith("all"): User.set_property("sampling", None)
		if Call.data.endswith("last"): User.set_property("sampling", 1000)
		# –û—Ç–≤–µ—Ç –Ω–∞ –∑–∞–ø—Ä–æ—Å.
		bot.answer_callback_query(Call.id)
		# –£–¥–∞–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è.
		bot.delete_message(
			chat_id = User.id,
			message_id = Call.message.id
		)

		# –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è: –≤—ã–±–æ—Ä–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞.
		if not Call.data.endswith("cancel"): bot.send_message(
			chat_id = User.id,
			text = "–í—ã–±–æ—Ä–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞.",
			reply_markup = ReplyKeyboards().mailing(User)
		)
			
		else:
			# –°–±—Ä–æ—Å –æ–∂–∏–¥–∞–µ–º–æ–≥–æ —Ç–∏–ø—ã.
			User.set_expected_type(None)

def InitializeFiles(bot: TeleBot, message: types.Message = None, user: UserData = None) -> bool:
	"""
	–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞: —Ñ–∞–π–ª—ã.
		bot ‚Äì —ç–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞;\n
		message ‚Äì —Å–æ–æ–±—â–µ–Ω–∏–µ;\n
		user ‚Äì –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å.
	"""

	# –ï—Å–ª–∏ –æ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –æ–∂–∏–¥–∞–µ—Ç—Å—è —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏.
	if user.has_permissions("admin") and user.expected_type == UserInput.Message.value:
		# –ï—Å–ª–∏ –µ—Å—Ç—å –ø–æ–¥–ø–∏—Å—å, –∑–∞–ø–∏—Å–∞—Ç—å –µ—ë.
		if message.caption: user.set_property("mailing_caption", message.html_caption)
		# –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –æ –≤–ª–æ–∂–µ–Ω–∏–∏.
		if message.content_type == "audio": user.get_property("mailing_content").append({"type": "audio", "file_id": message.audio.file_id})
		elif message.content_type == "document": user.get_property("mailing_content").append({"type": "document", "file_id": message.document.file_id})
		elif message.content_type == "video": user.get_property("mailing_content").append({"type": "video", "file_id": message.video.file_id})
	
def InitializePhoto(bot: TeleBot, users: UsersManager):
	"""
	–ù–∞–±–æ—Ä –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä–æ–≤: —Ñ–æ—Ç–æ.
		bot ‚Äì —ç–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞;\n
		users ‚Äì –º–µ–Ω–µ–¥–∂–µ—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.
	"""

	# –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–∞–π–ª–∞.				
	@bot.message_handler(content_types = ["photo"])
	def File(Message: types.Message):
		# –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
		User = users.auth(Message.from_user)

		# –ï—Å–ª–∏ –æ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –æ–∂–∏–¥–∞–µ—Ç—Å—è —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏.
		if User.has_permissions("admin") and User.expected_type == "message":
			# –ï—Å–ª–∏ –µ—Å—Ç—å –ø–æ–¥–ø–∏—Å—å, –∑–∞–ø–∏—Å–∞—Ç—å –µ—ë.
			if Message.caption: User.set_property("mailing_caption", Message.html_caption)
			# –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –æ –≤–ª–æ–∂–µ–Ω–∏–∏.
			User.get_property("mailing_content").append({"type": "photo", "file_id": Message.photo[-1].file_id})